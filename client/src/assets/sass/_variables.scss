@use "sass:map";
@use "sass:list";

// color scheme 1
$white:rgb(255, 255, 255);
$light-grey:rgb(222, 222, 222);
$grey:rgb(140, 127, 132);
$green:rgb(0, 191, 99);
$biloba-flower: rgb(187 154 247);
$grey-blue:rgb(68, 67, 109);
$dark-grey-blue:rgb(43, 45, 66);
$dark-purple:rgb(19, 7, 46);
$black:rgb(0, 0, 0);
$mulled-wine: rgb(68, 67, 109);

//  utility colors
$chrome-yellow: rgb(255 165 0);
$cookie-brown: rgb(199 155 26);
$vivid-red: rgb(234 67 53);
$ball-blue: rgb(54 163 217);

//  utility colors
$util-error: $vivid-red;
$util-alert: $chrome-yellow;
$util-alert-subtle: $cookie-brown;
$util-notify: $ball-blue;
$util-success: $green;

//  opacity values
$opacities: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0;

$light-colors: $white, $light-grey, $grey;

$neutral-colors: $green, $biloba-flower, $grey-blue;

$dark-colors: $dark-grey-blue, $dark-purple, $black, $mulled-wine;

@function build-color-scheme() {
    $map: ();
    $count: 1;
    @each $color in $light-colors {
        $map: map.set($map, "light-#{$count}", $color);
        $count: $count + 1;
    }
    $count: 1;
    @each $color in $neutral-colors {
        $map: map.set($map, "neutral-#{$count}", $color);
        $count: $count + 1;
    }
    $count: 1;
    @each $color in $dark-colors {
        $map: map.set($map, "dark-#{$count}", $color);
        $count: $count + 1;
    }
    @return $map;
}

$color-scheme: build-color-scheme();

@function is-color-light($color) {
    $color-index: list.index($light-colors, $color);
    $is-light: $color-index != null;
    @return $is-light;
}

@function is-color-neutral($color) {
    $color-index: list.index($neutral-colors, $color);
    $is-neutral: $color-index != null;
    @return $is-neutral;
}

@function is-color-dark($color) {
    $color-index: list.index($dark-colors, $color);
    $is-dark: $color-index != null;
    @return $is-dark;
}

$utility-colors: (
    "util-error": $util-error,
    "util-alert": $util-alert,
    "util-alert-subtle": $util-alert-subtle,
    "util-notify": $util-notify,
    "util-success": $util-success
);

$color-scheme-default: (
    'white': $white,
    'light-grey': $light-grey,
    'grey': $grey,
    'green': $green,
    'grey-blue': $grey-blue,
    'dark-grey-blue': $dark-grey-blue,
    'dark-purple': $dark-purple,
    'black': $black,
    'mulled-wine': $mulled-wine
);

$color-scheme-utility: (
    'error': $util-error,
    'alert': $util-alert,
    'alert-subtle': $util-alert-subtle,
    'notify': $util-notify,
    'success': $util-success
);

//  color scheme frost
$light-azure: rgb(246 250 253);
$pastel-gray-azure: rgb(179 207 229);
$azure: rgb(74 127 167);
$nile-blue: rgb(26 61 99);
$midnight: rgb(10 25 49);
$dark-purple: $dark-purple;

$frost-gradient-1: conic-gradient($azure, $nile-blue0);

$color-scheme-frost: (
    'light-azure': $light-azure,
    'pastel-gray-azure': $pastel-gray-azure,
    'nile-blue': $nile-blue,
    'midnight': $midnight,
    'dark-purple': $dark-purple,
    'gradient-1': $frost-gradient-1
);

$color-light: $ball-blue, $chrome-yellow, $light-azure, $light-grey, $grey, $pastel-gray-azure, $vivid-red, $white;
$color-neutral: $azure, $biloba-flower, $cookie-brown, $green, $grey-blue;
$color-dark:  $black, $dark-grey-blue, $dark-purple, $midnight, $mulled-wine, $nile-blue;